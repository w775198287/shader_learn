// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  void main () {
    vec4 o = vec4(1, 1, 1, 1);

    // #if USE_TEXTURE
    // o *= texture(texture, v_uv0);
    //   #if CC_USE_ALPHA_ATLAS_TEXTURE
    //   o.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;
    //   #endif
    // #endif

    // o *= v_color;
    o *= texture(texture, v_uv0);
    // 先画一个园
    // 圆心，半径默认为uv的一半
    vec2 center_p = vec2(0.5, 0.5);
    float dis = distance(v_uv0, center_p);
    // 1.不抗锯齿
    // step：前者大=0，后者大=1;头像取圆的话，为step(0.5, dis);
    // dis = step(dis, 0.5);

    // 2.抗锯齿：smoothstep(a,b,x), a为下界，b为上界，x<a时为0，x>b时为1；a、b之间时平滑过渡，
    // x < b < a 或 x > b > a， ===1；
    // x < a < b 或 x > a > b， ===0；
    dis = smoothstep(0.5, 0.5-0.01, dis);

    o *= dis;

    ALPHA_TEST(o);

    gl_FragColor = o;
  }
}%
