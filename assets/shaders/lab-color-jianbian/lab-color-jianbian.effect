// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
        top: { value: [1, 1, 1, 1], inspector:{ type: color } }
        middle: { value: [1, 1, 1, 1], inspector:{ type: color } }
        bottom: { value: [1, 1, 1, 1], inspector:{ type: color } }
        heightPos: { value: 0.1 }
        heightPosFan: { value: 0.1 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  uniform cst {
    vec4 top;
    vec4 middle;
    vec4 bottom;
    float cstedge;
    float heightPos;
    float heightPosFan;
  }
  #endif

  void main () {
    vec4 o = vec4(1, 1, 1, 1);

    #if USE_TEXTURE
    o *= texture(texture, v_uv0);
      #if CC_USE_ALPHA_ATLAS_TEXTURE
      // o.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;
      #endif
    #endif

    // o *= v_color;

    // o *= (top.xyz * (1.0 - v_uv0.y), 1.0);
    // o *= (bottom.xyz * v_uv0.y);
    // o.xyz = vec3(0.0, 0.0, 1.0);
    // o *= c;

    // o.rgb *= top.rgb*(1.0-v_uv0.y);
    // o.rgb += bottom.rgb*(v_uv0.y);
    // o.a *= v_color.a;

    // float s_uv = v_uv0.y * 0.873;
    // float y1 = 0.8;
    // float y2 = 1.0;
    // float y_top = 1.0;
    // float y_middle = 1.0;
    // float y_bottom = 1.0;
    // if(v_uv0.y <= heightPos) {
    //   y_top = (1.0 - v_uv0.y)*10.0*0.125;
    //   y_middle = (1.0 - v_uv0.y)*10.0*0.125;;
    //   y_bottom = 0.0;
    // }else{
    //   y_top = 0.0;
    //   y_middle = 0.0;
    //   float x = (1.0-v_uv0.y)*10.0*0.5;
    //   y_bottom = 1.0-x;
    // }
    
    // // o.rgb *= (top.rgb*(1.0-s_uv) + bottom.rgb*s_uv);
    // // o.rgb *= (top.rgb*(1.0-v_uv0.y) + bottom.rgb*v_uv0.y);
    // o.rgb *= (top.rgb*y_top + middle.rgb*y_middle + bottom.rgb*y_bottom);
    // // o.rgb *= (top.rgb*y_top + middle.rgb*y_middle);
    // // o.rgb *= top.rgb*y_top;
    // // o.rgb *= v_color.rgb*(1.0-v_uv0.y);
    // // o.g = v_color*(1.0-v_uv0.y);
    // // o.a = 1.0;


    float y_top = 1.0;
    if(v_uv0.y <= heightPos) {
      y_top = (heightPos - v_uv0.y)*heightPosFan;
    }else{
      y_top = 0.0;
    }

    o.rgb *= top.rgb*y_top;


    ALPHA_TEST(o);

    gl_FragColor = o;
  }
}%
